import React, { useState, useRef } from 'react';
import { View, FlatList, Text, StyleSheet, Dimensions } from 'react-native';

const { height } = Dimensions.get('window'); // Get screen height

// Sample data to simulate list items
const data = Array.from({ length: 50 }, (_, index) => ({
  id: String(index),
  color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, // Random color
}));

const HomeScreen = () => {
  const flatListRef = useRef(null); // Reference to FlatList for smooth scrolling
  const [dataList, setDataList] = useState(data); // Load data

  // Render each item in the FlatList
  const renderItem = ({ item }) => (
    <View style={[styles.item, { backgroundColor: item.color }]}>
      <Text style={styles.itemText}>Item {item.id}</Text>
    </View>
  );

  // Get the layout for each item, ensuring it takes full screen height
  const getItemLayout = (data, index) => ({
    length: height, // Set each item height to the full screen height
    offset: height * index, // Offset based on the index
    index,
  });

  // Calculate snap offsets for the scroll
  const snapToOffsets = data.map((_, index) => index * height);

  return (
    <View style={styles.container}>
      <FlatList
        ref={flatListRef}
        data={dataList}
        renderItem={renderItem}
        keyExtractor={(item) => item.id}
        showsVerticalScrollIndicator={false}
        snapToOffsets={snapToOffsets} // Set snap offsets for each item
        decelerationRate="fast" // Ensures smooth scrolling and snapping
        getItemLayout={getItemLayout} // Defines the layout of each item
        initialScrollIndex={0} // Start from the first item
        contentContainerStyle={{ paddingBottom: 0 }} // Padding for bottom tab
        removeClippedSubviews={true} // This prevents unnecessary re-renders
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  item: {
    width: '100%',
    height: height, // Full screen height per item
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 0, // Ensure no margins are causing overlap
    borderColor: '#ff0000',
    borderWidth: 1,
  },
  itemText: {
    color: '#fff',
    fontSize: 24,
    fontWeight: 'bold',
  },
});

export default HomeScreen;
